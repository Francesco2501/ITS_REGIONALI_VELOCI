#pragma checksum "C:\Users\rconte\Desktop\PW\ITS_REGIONALI_VELOCI\CLOUD\ITS.PW_ANNO2.GRUPPO4.Dashboard\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c77a2ddd2feaac99691991d0a4d703b148e3ea12"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(ITS.PW_ANNO2.GRUPPO4.Dashboard.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace ITS.PW_ANNO2.GRUPPO4.Dashboard.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\rconte\Desktop\PW\ITS_REGIONALI_VELOCI\CLOUD\ITS.PW_ANNO2.GRUPPO4.Dashboard\Pages\_ViewImports.cshtml"
using ITS.PW_ANNO2.GRUPPO4.Dashboard;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c77a2ddd2feaac99691991d0a4d703b148e3ea12", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6bb05f5409ba8a4aae5810d1a38efc7f19d6ead5", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\rconte\Desktop\PW\ITS_REGIONALI_VELOCI\CLOUD\ITS.PW_ANNO2.GRUPPO4.Dashboard\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"main\">\r\n    \r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
	<script type=""text/javascript"">
        var tarr = [];
        var idt, idc, idtemp, idhum, idbd, idcr1, idcr2, idal = 0;
        //create complete card if train doesn't exist
        function createCard(idt, idc, idtemp, idhum, idbd, idcr1, idcr2, idal) {
            $('<div></div>').addClass(""col-sm-2 col-md-4"").attr(""id"", ""crcol"" + idt.toString() + idc.toString() ).appendTo('#rowtr' + idt.toString());
            $('<div></div>').addClass(""card mb-2"").attr(""id"", ""crcard"" + idt.toString() + idc.toString() ).appendTo('#crcol' + idt.toString() + idc.toString() );
            $('<div></div>').addClass(""card-header"").attr(""id"", ""crcardheader"" + idt.toString() + idc.toString() ).appendTo('#crcard' + idt.toString() + idc.toString() );
            $( ""#crcardheader"" + idt.toString() + idc.toString()).append( ""<p id="" + ""pheadert"" + idt.toString() + idc.toString() + "">"" + ""Treno: "" + idt + ""</p>"" );
            $( ""#crcardheader"" + idt.toString() + idc.toString()).append( ""<p id="" + ""pheaderh"" + idt.toS");
                WriteLiteral(@"tring() + idc.toString() + "">"" + ""Carriage: "" + idc + ""</p>"" );
            $('<div></div>').addClass(""card-body"").attr(""id"", ""crcardbody"" + idt.toString() + idc.toString() ).appendTo('#crcard' + idt.toString() + idc.toString() );
            $( ""#crcardbody"" + idt.toString() + idc.toString()).append( ""<p id="" + ""pbodyt"" + idt.toString() + idc.toString() + "" >"" + ""C°: "" + idtemp + ""</p>"" );
            $( ""#crcardbody"" + idt.toString() + idc.toString()).append( ""<p id="" + ""pbodyh"" + idt.toString() + idc.toString() + "" >"" + ""%: "" + idhum + ""</p>"" );
            $( ""#crcardbody"" + idt.toString() + idc.toString()).append( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodybd"" + idt.toString() + idc.toString() + "" >"" + ""bathdoor: "" + idbd + ""</p>"" );
            $( ""#crcardbody"" + idt.toString() + idc.toString()).append( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodycr1"" + idt.toString() + idc.toString() + "" >"" + ""carriagedoor1: "" + idcr1 + ""</p>"" );
            $( ""#crcardbody"" + idt.toString() + id");
                WriteLiteral(@"c.toString()).append( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodycr2"" + idt.toString() + idc.toString() + "" >"" + ""carriagedoor2: "" + idcr2 + ""</p>"" );
            $( ""#crcardbody"" + idt.toString() + idc.toString()).append( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodyal"" + idt.toString() + idc.toString() + "" >"" + ""alarm: "" + idal + ""</p>"" );
            
            $(""<button>Vai al dettaglio</button>"").addClass(""btn btn-warning"").attr(""id"", ""show"" + idt.toString() + idc.toString()).appendTo(""#crcardbody"" + idt.toString() + idc.toString());
            $(""#show"" + idt.toString() + idc.toString()).on(""click"", function(){ Showp(idt, idc); });            
        }
        //show detail on card
        function Showp(idt, idc) {            
            $(""#pbodybd"" + idt.toString() + idc.toString()).show();
            $(""#pbodycr1"" + idt.toString() + idc.toString()).show();
            $(""#pbodycr2"" + idt.toString() + idc.toString()).show();
            $(""#pbodyal"" + idt.toString() ");
                WriteLiteral(@"+ idc.toString()).show();            
        }
        $(document).ready(function(){            
            setInterval(function(){
                $.get(""https://localhost:44358/api/Data"", function(data, status) {
                    //assign json train variable
                    idt = data[0].ntrain;
                    idc = data[0].ncarriage;
                    idtemp = data[0].temp;
                    idhum = data[0].humidity;
                    idbd = data[0].bathdoor;
                    idcr1 = data[0].carriagedoor1;
                    idcr2 = data[0].carriagedoor2;
                    idal = data[0].alarm;
                    //if train don't exist
                    if(!tarr.includes(data[0].ntrain)) {
                            
                        tarr.push(data[0].ntrain)
                            
                        $('<div></div>').addClass(""row"").attr(""id"", ""rowtr"" + idt.toString() ).appendTo('.main');
                        createCard(idt, idc, idtemp");
                WriteLiteral(@", idhum, idbd, idcr1, idcr2, idal);                      
                    }
                    //update information
                    else if(tarr.includes(data[0].ntrain) && !!document.getElementById(""crcol"" + (data[0].ntrain).toString() + (data[0].ncarriage).toString())) {
                            
                        $( ""#pheadert"" + idt.toString() + idc.toString()).replaceWith( ""<p id="" + ""pheadert"" + idt.toString() + idc.toString() + "">"" + ""Treno: "" + data[0].ntrain + ""</p>"" );
                        $( ""#pheaderh"" + idt.toString() + idc.toString()).replaceWith( ""<p id="" + ""pheaderh"" + idt.toString() + idc.toString() + "">"" + ""Carriage: "" + data[0].ncarriage + ""</p>"" );

                        $( ""#pbodyt"" + idt.toString() + idc.toString()).replaceWith( ""<p id="" + ""pbodyt"" + idt.toString() + idc.toString() + "">"" + ""C°: "" + idtemp + ""</p>"" );
                        $( ""#pbodyh"" + idt.toString() + idc.toString()).replaceWith( ""<p id="" + ""pbodyh"" + idt.toString() + idc.toString() + ");
                WriteLiteral(@""">"" + ""%: "" + idhum + ""</p>"" );
                        $( ""#pbodybd"" + idt.toString() + idc.toString()).replaceWith( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodybd"" + idt.toString() + idc.toString() + "" >"" + ""bathdoor: "" + idbd + ""</p>"" );
                        $( ""#pbodycr1"" + idt.toString() + idc.toString()).replaceWith( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodycr1"" + idt.toString() + idc.toString() + "" >"" + ""carriagedoor1: "" + idcr1 + ""</p>"" );
                        $( ""#pbodycr2"" + idt.toString() + idc.toString()).replaceWith( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodycr2"" + idt.toString() + idc.toString() + "" >"" + ""carriagedoor2: "" + idcr2 + ""</p>"" );
                        $( ""#pbodyal"" + idt.toString() + idc.toString()).replaceWith( ""<p style="" + ""display:"" + ""none;"" + "" id="" + ""pbodyal"" + idt.toString() + idc.toString() + "" >"" + ""alarm: "" + idal + ""</p>"" );                        
                    }
                    else {                            
   ");
                WriteLiteral("                     createCard(idt, idc, idtemp, idhum, idbd, idcr1, idcr2, idal);                         \r\n                    }\r\n                });\r\n            }, 5000);             \r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
